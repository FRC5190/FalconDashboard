plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id "edu.wpi.first.GradleRIO" version "2020.2.2"
    id "com.google.osdetector" version "1.6.2"
    id "application"
    // id "java"
}


ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os
mainClassName = "org.ghrobotics.falcondashboard.MainKt"

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    // We need to add the Kotlin stdlib in order to use most Kotlin language features.
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-reflect"

    // TornadoFX
    compile("no.tornado:tornadofx:1.7.19") { transitive = false }

    // Material Theme
    compile "com.jfoenix:jfoenix:9.0.10"
    compile "com.github.bkenn:kfoenix:0.1.3"

    // Kotlin Coroutines
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"

    // Kotson for Serialization
    compile "com.github.salomonbrys.kotson:kotson:2.5.0"

    // Falcon Library
    compile "org.ghrobotics.FalconLibrary:core:2020.2.2"
    compile "org.ghrobotics.FalconLibrary:wpi:2020.2.2"

    // JavaFX
    compile "org.openjfx:javafx-base:11.0.1:$platform"
    compile "org.openjfx:javafx-graphics:11.0.1:$platform"
    compile "org.openjfx:javafx-controls:11.0.1:$platform"
    compile "org.openjfx:javafx-fxml:11.0.1:$platform"

    // WPILib
    compile wpi.deps.wpilib()

    // NT JNI Compile
    compile "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:windowsx86-64"
    compile "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:windowsx86"
    compile "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:linuxx86-64"
    compile "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:osxx86-64"

    // NT JNI for Runtime
    runtime "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:windowsx86"
    runtime "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:windowsx86-64"
    runtime "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:linuxx86-64"
    runtime "edu.wpi.first.ntcore:ntcore-jni:2020.2.2:osxx86-64"

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50"


}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

wrapper {
    gradleVersion = "6.0.1"
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': "org.ghrobotics.falcondashboard.MainKt"
    }
}